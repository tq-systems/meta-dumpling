From db5ffba96c04c1180ad36b197240e1323ca38913 Mon Sep 17 00:00:00 2001
From: Markus Niebel <Markus.Niebel@tq-group.com>
Date: Thu, 7 Oct 2021 19:00:16 +0200
Subject: [PATCH] sys/v4l2/gstv4l2object.c: add 10,12,14,16 Bit Raw Bayer FMT

Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>

%% original patch: gstreamer1.0-plugins-good_bayer.patch
---
 sys/v4l2/gstv4l2object.c | 165 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 157 insertions(+), 8 deletions(-)

diff --git a/sys/v4l2/gstv4l2object.c b/sys/v4l2/gstv4l2object.c
index 76f2282..b437b22 100644
--- a/sys/v4l2/gstv4l2object.c
+++ b/sys/v4l2/gstv4l2object.c
@@ -44,6 +44,17 @@
 #include <gst/video/video.h>
 #include <gst/allocators/gstdmabuf.h>
 
+#ifndef V4L2_PIX_FMT_SBGGR14
+#  define V4L2_PIX_FMT_SBGGR14 v4l2_fourcc('B', 'G', '1', '4')
+#  define V4L2_PIX_FMT_SGBRG14 v4l2_fourcc('G', 'B', '1', '4')
+#  define V4L2_PIX_FMT_SGRBG14 v4l2_fourcc('G', 'R', '1', '4')
+#  define V4L2_PIX_FMT_SRGGB14 v4l2_fourcc('R', 'G', '1', '4')
+#endif
+
+#ifndef V4L2_PIX_FMT_Y14
+#  define V4L2_PIX_FMT_Y14     v4l2_fourcc('Y', '1', '4', ' ') /* 14  Greyscale     */
+#endif
+
 GST_DEBUG_CATEGORY_EXTERN (v4l2_debug);
 #define GST_CAT_DEFAULT v4l2_debug
 
@@ -114,6 +125,7 @@ static const GstV4L2FormatDesc gst_v4l2_formats[] = {
   {V4L2_PIX_FMT_Y6, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_Y10, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_Y12, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_Y14, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_Y16, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_Y16_BE, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_Y10BPACK, TRUE, GST_V4L2_RAW},
@@ -167,6 +179,26 @@ static const GstV4L2FormatDesc gst_v4l2_formats[] = {
   {V4L2_PIX_FMT_SGRBG8, TRUE, GST_V4L2_RAW},
   {V4L2_PIX_FMT_SRGGB8, TRUE, GST_V4L2_RAW},
 
+  {V4L2_PIX_FMT_SBGGR10, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGBRG10, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGRBG10, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SRGGB10, TRUE, GST_V4L2_RAW},
+
+  {V4L2_PIX_FMT_SBGGR12, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGBRG12, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGRBG12, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SRGGB12, TRUE, GST_V4L2_RAW},
+
+  {V4L2_PIX_FMT_SBGGR14, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGBRG14, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGRBG14, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SRGGB14, TRUE, GST_V4L2_RAW},
+
+  {V4L2_PIX_FMT_SBGGR16, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGBRG16, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SGRBG16, TRUE, GST_V4L2_RAW},
+  {V4L2_PIX_FMT_SRGGB16, TRUE, GST_V4L2_RAW},
+
   /* compressed formats */
   {V4L2_PIX_FMT_MJPEG, FALSE, GST_V4L2_CODEC},
   {V4L2_PIX_FMT_JPEG, FALSE, GST_V4L2_CODEC},
@@ -1025,6 +1057,7 @@ gst_v4l2_object_format_get_rank (const struct v4l2_fmtdesc *fmt)
     case V4L2_PIX_FMT_Y6:
     case V4L2_PIX_FMT_Y10:
     case V4L2_PIX_FMT_Y12:
+    case V4L2_PIX_FMT_Y14:
     case V4L2_PIX_FMT_Y10BPACK:
     case V4L2_PIX_FMT_YUV555:
     case V4L2_PIX_FMT_YUV565:
@@ -1118,6 +1151,26 @@ gst_v4l2_object_format_get_rank (const struct v4l2_fmtdesc *fmt)
     case V4L2_PIX_FMT_SGBRG8:
     case V4L2_PIX_FMT_SGRBG8:
     case V4L2_PIX_FMT_SRGGB8:
+
+    case V4L2_PIX_FMT_SBGGR10:
+    case V4L2_PIX_FMT_SGBRG10:
+    case V4L2_PIX_FMT_SGRBG10:
+    case V4L2_PIX_FMT_SRGGB10:
+
+    case V4L2_PIX_FMT_SBGGR12:
+    case V4L2_PIX_FMT_SGBRG12:
+    case V4L2_PIX_FMT_SGRBG12:
+    case V4L2_PIX_FMT_SRGGB12:
+
+    case V4L2_PIX_FMT_SBGGR14:
+    case V4L2_PIX_FMT_SGBRG14:
+    case V4L2_PIX_FMT_SGRBG14:
+    case V4L2_PIX_FMT_SRGGB14:
+
+    case V4L2_PIX_FMT_SBGGR16:
+    case V4L2_PIX_FMT_SGBRG16:
+    case V4L2_PIX_FMT_SGRBG16:
+    case V4L2_PIX_FMT_SRGGB16:
       rank = BAYER_BASE_RANK;
       break;
 
@@ -1421,6 +1474,22 @@ gst_v4l2_object_v4l2fourcc_is_rgb (guint32 fourcc)
     case V4L2_PIX_FMT_SGBRG8:
     case V4L2_PIX_FMT_SGRBG8:
     case V4L2_PIX_FMT_SRGGB8:
+    case V4L2_PIX_FMT_SBGGR10:
+    case V4L2_PIX_FMT_SGBRG10:
+    case V4L2_PIX_FMT_SGRBG10:
+    case V4L2_PIX_FMT_SRGGB10:
+    case V4L2_PIX_FMT_SBGGR12:
+    case V4L2_PIX_FMT_SGBRG12:
+    case V4L2_PIX_FMT_SGRBG12:
+    case V4L2_PIX_FMT_SRGGB12:
+    case V4L2_PIX_FMT_SBGGR14:
+    case V4L2_PIX_FMT_SGBRG14:
+    case V4L2_PIX_FMT_SGRBG14:
+    case V4L2_PIX_FMT_SRGGB14:
+    case V4L2_PIX_FMT_SBGGR16:
+    case V4L2_PIX_FMT_SGBRG16:
+    case V4L2_PIX_FMT_SGRBG16:
+    case V4L2_PIX_FMT_SRGGB16:
       ret = TRUE;
       break;
     default:
@@ -1550,11 +1619,71 @@ gst_v4l2_object_v4l2fourcc_to_bare_struct (guint32 fourcc)
     case V4L2_PIX_FMT_SGBRG8:
     case V4L2_PIX_FMT_SGRBG8:
     case V4L2_PIX_FMT_SRGGB8:
+
+    case V4L2_PIX_FMT_SBGGR10:
+    case V4L2_PIX_FMT_SGBRG10:
+    case V4L2_PIX_FMT_SGRBG10:
+    case V4L2_PIX_FMT_SRGGB10:
+
+    case V4L2_PIX_FMT_SBGGR12:
+    case V4L2_PIX_FMT_SGBRG12:
+    case V4L2_PIX_FMT_SGRBG12:
+    case V4L2_PIX_FMT_SRGGB12:
+
+    case V4L2_PIX_FMT_SBGGR14:
+    case V4L2_PIX_FMT_SGBRG14:
+    case V4L2_PIX_FMT_SGRBG14:
+    case V4L2_PIX_FMT_SRGGB14:
+
+    case V4L2_PIX_FMT_SBGGR16:
+    case V4L2_PIX_FMT_SGBRG16:
+    case V4L2_PIX_FMT_SGRBG16:
+    case V4L2_PIX_FMT_SRGGB16:
       structure = gst_structure_new ("video/x-bayer", "format", G_TYPE_STRING,
-          fourcc == V4L2_PIX_FMT_SBGGR8 ? "bggr" :
-          fourcc == V4L2_PIX_FMT_SGBRG8 ? "gbrg" :
-          fourcc == V4L2_PIX_FMT_SGRBG8 ? "grbg" :
-          /* fourcc == V4L2_PIX_FMT_SRGGB8 ? */ "rggb", NULL);
+         (fourcc == V4L2_PIX_FMT_SBGGR8  ? "bggr" :
+          fourcc == V4L2_PIX_FMT_SBGGR10 ? "bggr" :
+          fourcc == V4L2_PIX_FMT_SBGGR12 ? "bggr" :
+          fourcc == V4L2_PIX_FMT_SBGGR14 ? "bggr" :
+          fourcc == V4L2_PIX_FMT_SBGGR16 ? "bggr" :
+
+          fourcc == V4L2_PIX_FMT_SGBRG8  ? "gbrg" :
+          fourcc == V4L2_PIX_FMT_SGBRG10 ? "gbrg" :
+          fourcc == V4L2_PIX_FMT_SGBRG12 ? "gbrg" :
+          fourcc == V4L2_PIX_FMT_SGBRG14 ? "gbrg" :
+          fourcc == V4L2_PIX_FMT_SGBRG16 ? "gbrg" :
+
+          fourcc == V4L2_PIX_FMT_SGRBG8  ? "grbg" :
+          fourcc == V4L2_PIX_FMT_SGRBG10 ? "grbg" :
+          fourcc == V4L2_PIX_FMT_SGRBG12 ? "grbg" :
+          fourcc == V4L2_PIX_FMT_SGRBG14 ? "grbg" :
+          fourcc == V4L2_PIX_FMT_SGRBG16 ? "grbg" :
+
+          "rggb"),
+
+          "bpp", G_TYPE_INT,
+          (fourcc == V4L2_PIX_FMT_SBGGR10  ? 10 :
+           fourcc == V4L2_PIX_FMT_SGBRG10  ? 10 :
+           fourcc == V4L2_PIX_FMT_SGRBG10  ? 10 :
+           fourcc == V4L2_PIX_FMT_SRGGB10  ? 10 :
+
+           fourcc == V4L2_PIX_FMT_SBGGR12  ? 12 :
+           fourcc == V4L2_PIX_FMT_SGBRG12  ? 12 :
+           fourcc == V4L2_PIX_FMT_SGRBG12  ? 12 :
+           fourcc == V4L2_PIX_FMT_SRGGB12  ? 12 :
+
+           fourcc == V4L2_PIX_FMT_SBGGR14  ? 14 :
+           fourcc == V4L2_PIX_FMT_SGBRG14  ? 14 :
+           fourcc == V4L2_PIX_FMT_SGRBG14  ? 14 :
+           fourcc == V4L2_PIX_FMT_SRGGB14  ? 14 :
+
+           fourcc == V4L2_PIX_FMT_SBGGR16  ? 16 :
+           fourcc == V4L2_PIX_FMT_SGBRG16  ? 16 :
+           fourcc == V4L2_PIX_FMT_SGRBG16  ? 16 :
+           fourcc == V4L2_PIX_FMT_SRGGB16  ? 16 :
+
+           8),
+
+          NULL);
       break;
     case V4L2_PIX_FMT_SN9C10X:
       structure = gst_structure_new_empty ("video/x-sonix");
@@ -1576,6 +1705,7 @@ gst_v4l2_object_v4l2fourcc_to_bare_struct (guint32 fourcc)
     case V4L2_PIX_FMT_Y6:
     case V4L2_PIX_FMT_Y10:
     case V4L2_PIX_FMT_Y12:
+    case V4L2_PIX_FMT_Y14:
     case V4L2_PIX_FMT_Y10BPACK:
     case V4L2_PIX_FMT_YUV444:
     case V4L2_PIX_FMT_YUV555:
@@ -1910,15 +2040,34 @@ gst_v4l2_object_get_caps_info (GstV4l2Object * v4l2object, GstCaps * caps,
       fourcc = V4L2_PIX_FMT_VP9;
     } else if (g_str_equal (mimetype, "video/x-bayer")) {
       const gchar *format = gst_structure_get_string (structure, "format");
+      gint bpp;
+      if (!gst_structure_get_int(structure, "bpp", &bpp))
+        bpp = 8;
       if (format) {
         if (!g_ascii_strcasecmp (format, "bggr"))
-          fourcc = V4L2_PIX_FMT_SBGGR8;
+          fourcc = (bpp == 10 ? V4L2_PIX_FMT_SBGGR10 :
+                    bpp == 12 ? V4L2_PIX_FMT_SBGGR12 :
+                    bpp == 14 ? V4L2_PIX_FMT_SBGGR14 :
+                    bpp == 16 ? V4L2_PIX_FMT_SBGGR16 :
+                    V4L2_PIX_FMT_SBGGR8);
         else if (!g_ascii_strcasecmp (format, "gbrg"))
-          fourcc = V4L2_PIX_FMT_SGBRG8;
+          fourcc = (bpp == 10 ? V4L2_PIX_FMT_SGBRG10 :
+                    bpp == 12 ? V4L2_PIX_FMT_SGBRG12 :
+                    bpp == 14 ? V4L2_PIX_FMT_SGBRG14 :
+                    bpp == 16 ? V4L2_PIX_FMT_SGBRG16 :
+                    V4L2_PIX_FMT_SGBRG8);
         else if (!g_ascii_strcasecmp (format, "grbg"))
-          fourcc = V4L2_PIX_FMT_SGRBG8;
+          fourcc = (bpp == 10 ? V4L2_PIX_FMT_SGRBG10 :
+                    bpp == 12 ? V4L2_PIX_FMT_SGRBG12 :
+                    bpp == 14 ? V4L2_PIX_FMT_SGRBG14 :
+                    bpp == 16 ? V4L2_PIX_FMT_SGRBG16 :
+                    V4L2_PIX_FMT_SGRBG8);
         else if (!g_ascii_strcasecmp (format, "rggb"))
-          fourcc = V4L2_PIX_FMT_SRGGB8;
+          fourcc = (bpp == 10 ? V4L2_PIX_FMT_SRGGB10 :
+                    bpp == 12 ? V4L2_PIX_FMT_SRGGB12 :
+                    bpp == 14 ? V4L2_PIX_FMT_SRGGB14 :
+                    bpp == 16 ? V4L2_PIX_FMT_SRGGB16 :
+                    V4L2_PIX_FMT_SRGGB8);
       }
     } else if (g_str_equal (mimetype, "video/x-sonix")) {
       fourcc = V4L2_PIX_FMT_SN9C10X;
-- 
2.25.1

